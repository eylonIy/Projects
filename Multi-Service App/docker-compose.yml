services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  stocks1-a:
    build: ./stocks-service
    ports:
      - "5001:8000"
    expose:
      - 8000
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/stocks1
      - SERVICE_NAME=stocks1
      - PORT=8000
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network

  stocks1-b:
    build: ./stocks-service
    expose:
      - 8000
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/stocks1
      - SERVICE_NAME=stocks1
      - PORT=8000
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network

  stocks2:
    build: ./stocks-service
    ports:
      - "5002:8000"
    expose:
      - 8000
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/stocks2
      - SERVICE_NAME=stocks2
      - PORT=8000    # Set container port to 8000
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network

  capital-gains:
    build: ./capital-gains-service
    ports:
      - "5003:8080"  # Map container port 8080 to host port 5003
    environment:
      - STOCKS1_A_URL=http://stocks1-a:8000
      - STOCKS1_B_URL=http://stocks1-b:8000
      - STOCKS2_URL=http://stocks2:8000
    depends_on:
      - stocks1-a
      - stocks1-b
      - stocks2
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"     # Map container port 80 to host port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - stocks1-a
      - stocks1-b
      - stocks2
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: